---
import ThemeToggle from "@/components/ThemeToggle.astro";
import { menuLinks, siteConfig } from "@/site.config";
---

<header class="group relative mb-20 flex items-center justify-between sm:ps-18" id="main-header">
	<div class="flex sm:flex-col">
		<a
			aria-current={Astro.url.pathname === "/" ? "page" : false}
			class="inline-flex items-center sm:relative sm:inline-block"
			href="/"
		>
			<svg
				class="me-3 h-10 w-6 transition duration-1000 hover:scale-105 hover:rotate-360 sm:absolute sm:-start-18 sm:me-0 sm:w-12"
				width="249"
				height="249"
				viewBox="0 0 249 249"
				fill="none"
				xmlns="http://www.w3.org/2000/svg"
			>
				<path
					class="stroke-accent-dark dark:stroke-accent"
					d="M65 199.5L94.8087 230.316C111.211 246.718 137.804 246.718 154.206 230.316L230.316 154.206C246.718 137.804 246.718 111.211 230.316 94.8087L154.206 18.6985C137.804 2.29648 111.211 2.29645 94.8087 18.6985L18.6985 94.8087C2.29648 111.211 2.29645 137.804 18.6985 154.206L65 199.5ZM65 199.5V48.5072M125 242.614V123.5M125 6.39985V123.5M242.605 123.5H125"
					stroke-width="12"></path>
			</svg>

			<span class="font-pp-neue-machina text-xl leading-2 font-bold sm:text-2xl"
				>{siteConfig.title}</span
			>
		</a>
		<nav
			aria-label="Main menu"
			class="bg-global-bg/85 text-accent-dark dark:text-accent sm:divide-accent absolute -inset-x-4 top-14 hidden flex-col items-end gap-y-4 rounded-md py-4 shadow backdrop-blur-sm group-[.menu-open]:z-50 group-[.menu-open]:flex sm:static sm:z-auto sm:-ms-2 sm:mt-1 sm:flex sm:flex-row sm:items-center sm:rounded-none sm:bg-transparent sm:py-0 sm:shadow-none sm:backdrop-blur-none"
			id="navigation-menu"
		>
			{
				menuLinks.map((link) => (
					<a
						aria-current={Astro.url.pathname === link.path ? "page" : false}
						class="px-2 py-4 underline-offset-2 hover:underline sm:py-0"
						data-astro-prefetch
						href={link.path}
					>
						{link.title}
					</a>
				))
			}
		</nav>
	</div>
	<div class="flex items-center gap-2">
		<ThemeToggle />
		<mobile-button>
			<button
				aria-expanded="false"
				aria-haspopup="menu"
				class="group relative ms-4 h-7 w-7 sm:invisible sm:hidden"
				id="toggle-navigation-menu"
				type="button"
			>
				<span class="sr-only">Open main menu</span>
				<svg
					aria-hidden="true"
					class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 transition-all group-aria-expanded:scale-0 group-aria-expanded:opacity-0"
					fill="none"
					focusable="false"
					id="line-svg"
					stroke="currentColor"
					stroke-width="1.5"
					viewBox="0 0 24 24"
					xmlns="http://www.w3.org/2000/svg"
				>
					<path d="M3.75 9h16.5m-16.5 6.75h16.5" stroke-linecap="round" stroke-linejoin="round"
					></path>
				</svg>
				<svg
					aria-hidden="true"
					class="text-accent absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 scale-0 opacity-0 transition-all group-aria-expanded:scale-100 group-aria-expanded:opacity-100"
					class="text-accent"
					fill="none"
					focusable="false"
					id="cross-svg"
					stroke="currentColor"
					stroke-width="1.5"
					viewBox="0 0 24 24"
					xmlns="http://www.w3.org/2000/svg"
				>
					<path d="M6 18L18 6M6 6l12 12" stroke-linecap="round" stroke-linejoin="round"></path>
				</svg>
			</button>
		</mobile-button>
	</div>
</header>

<script>
	import { toggleClass } from "@/utils/domElement";

	class MobileNavBtn extends HTMLElement {
		#menuOpen: boolean = false;

		connectedCallback() {
			const headerEl = document.getElementById("main-header")!;
			const mobileButtonEl = this.querySelector<HTMLButtonElement>("button");

			mobileButtonEl?.addEventListener("click", () => {
				if (headerEl) toggleClass(headerEl, "menu-open");
				this.#menuOpen = !this.#menuOpen;
				mobileButtonEl.setAttribute("aria-expanded", this.#menuOpen.toString());
			});
		}
	}

	customElements.define("mobile-button", MobileNavBtn);
</script>
